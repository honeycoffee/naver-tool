<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naver.pubtrans.itn.api.repository.TaskRepository">

	<select id="getTaskListTotalCnt" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskSearchVo" resultType="int">
		SELECT
		    count(*) as total_list_cnt
		FROM
		    tb_z_svc_task task
		WHERE
			<include refid="whereTaskList" />
	</select>

	<select id="selectTaskList" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskSearchVo" resultType="com.naver.pubtrans.itn.api.vo.task.output.TaskListOutputVo">
		SELECT
		    task.task_id
			, task.city_code
			, task.provider_id
			, task.task_status_type
			, task.task_data_source_type
			, task.pub_trans_id
			, task.pub_trans_type
			, task.pub_trans_name
			, task.task_comment
			, task.reg_user_name
			, date_format(task.reg_date, '%Y-%m-%d') as reg_date
			, task.work_user_name
			, date_format(task.work_assign_date, '%Y-%m-%d') as work_assign_date
			, date_format(task.work_complete_date, '%Y-%m-%d') as work_complete_date
			, task.check_user_name
			, date_format(task.check_complete_date, '%Y-%m-%d') as check_complete_date

			, tbp.provider_name
			, tcc.city_name
		FROM
		    tb_z_svc_task task
		LEFT JOIN
			tb_bus_provider tbp on task.provider_id = tbp.provider_id
		LEFT JOIN
			tb_city_code tcc on task.city_code = tcc.city_code
		WHERE
			<include refid="whereTaskList" />

		ORDER BY
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sortKey)">
					<choose>
						<when test="sortKey.equals('task_id')">
							task.task_id ${sortType}
						</when>
						<otherwise>
							task.task_id desc
						</otherwise>
					</choose>
				</when>
				<otherwise>
					task.task_id desc
				</otherwise>
			</choose>

		LIMIT
			#{startPageLimit}, #{endPageLimit}
	</select>

	<select id="selectTaskStatusTypeCnt" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskSearchVo" resultType="com.naver.pubtrans.itn.api.vo.task.TaskStatusTypeCntVo">
		SELECT
		    task.task_status_type,
			count(task.task_status_type) as task_status_type_cnt
		FROM
		    tb_z_svc_task task
		WHERE
			<include refid="whereTaskList" />
		GROUP BY
			task.task_status_type
	</select>


	<sql id="whereTaskList">
		task.delete_yn = 'N'

		<if test="taskId != null and taskId > 0">
			AND	task.task_id = #{taskId}
		</if>

		<if test="providerId != null and providerId > 0">
			AND task.provider_id = #{providerId}
		</if>

		<if test="pubTransId != null and pubTransId > 0">
			AND task.pub_trans_id = #{pubTransId}
		</if>

		<if test="taskDataSourceType != null">
			AND task.task_data_source_type = #{taskDataSourceType}
		</if>

		<if test="taskStatusType != null">
			AND task.task_status_type = #{taskStatusType}
		</if>

		<if test="pubTransType != null">
			AND task.pub_trans_type = #{pubTransType}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(pubTransName)">
			AND task.pub_trans_name like concat(#{pubTransName}, '%')
		</if>

		<if test="cityCode != null and cityCode > 0">
			AND task.city_code = #{cityCode}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(regUserId)">
			AND task.reg_user_id = #{regUserId}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(startRegDate)">
			AND task.reg_date >= concat(#{startRegDate}, ' 00:00:00')
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(endRegDate)">
			AND task.reg_date <![CDATA[<=]]> concat(#{endRegDate}, ' 23:59:59')
		</if>


	    <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(workUserId)">
			AND task.work_user_id = #{workUserId}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(startWorkDate)">
			AND task.work_complete_date >= concat(#{startWorkDate}, ' 00:00:00')
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(endWorkDate)">
			AND task.work_complete_date <![CDATA[<=]]> concat(#{endWorkDate}, ' 23:59:59')
		</if>

	    <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(workUserId)">
			AND task.check_user_id = #{checkUserId}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(startCheckDate)">
			AND task.check_complete_date >= concat(#{startCheckDate}, ' 00:00:00')
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(endCheckDate)">
			AND task.check_complete_date <![CDATA[<=]]> concat(#{endCheckDate}, ' 23:59:59')
		</if>

	</sql>


	<select id="getTaskSummaryListTotalCnt" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskSearchVo" resultType="int">
		SELECT
			count(*) as total_list_cnt
		FROM
			tb_z_svc_task
		WHERE


			<include refid="whereTaskSummaryList" />

	</select>

	<select id="selectTaskSummaryList" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskSearchVo" resultType="com.naver.pubtrans.itn.api.vo.task.output.TaskSummaryOutputVo">
		SELECT
			task_id
			, task_type
			, task_status_type
			, pub_trans_type
			, task_comment
			, date_format(reg_date, '%Y-%m-%d') as reg_date
			, work_user_name
		FROM
			tb_z_svc_task
		WHERE

			<include refid="whereTaskSummaryList" />

		ORDER BY
			task_id desc
		LIMIT
			#{startPageLimit}, #{endPageLimit}
	</select>


	<sql id="whereTaskSummaryList">
		delete_yn = 'N'
		AND pub_trans_id = #{pubTransId}
		AND pub_trans_type = #{pubTransType}
	</sql>


	<select id="getTaskInfo" parameterType="long" resultType="com.naver.pubtrans.itn.api.vo.task.output.TaskOutputVo">
		SELECT
			task.task_id
			, task.provider_id
			, task.task_type
			, task.task_status_type
			, task.task_check_request_type
			, task.task_data_source_type
			, task.pub_trans_id
			, task.pub_trans_type
			, task.pub_trans_name
			, task.task_comment
			, task.bis_auto_change_data
			, task.auto_register_yn
			, task.reg_user_name
			, task.reg_user_id
			, date_format(task.reg_date, '%Y-%m-%d %H:%i:%s') as reg_date
			, task.work_user_name
			, task.work_user_id
			, date_format(task.work_assign_date, '%Y-%m-%d %H:%i:%s') as work_assign_date
			, date_format(task.work_complete_date, '%Y-%m-%d %H:%i:%s') as work_complete_date
			, task.check_user_name
			, task.check_user_id
			, date_format(task.check_assign_date, '%Y-%m-%d %H:%i:%s') as check_assign_date
			, date_format(task.check_complete_date, '%Y-%m-%d %H:%i:%s') as check_complete_date

			, tbp.provider_name
		FROM
			tb_z_svc_task task
		LEFT JOIN
			tb_bus_provider tbp on task.provider_id = tbp.provider_id
		WHERE
			task.task_id = #{taskId}
			AND task.delete_yn = 'N'


	</select>

	<insert id="insertTaskInfo" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskInputVo" useGeneratedKeys="true" keyProperty="taskId">
		INSERT INTO tb_z_svc_task
			(
				city_code, provider_id, task_type, task_status_type, pub_trans_id
				, pub_trans_type, pub_trans_name, task_comment, bis_auto_change_data, delete_yn
				, reg_user_name, reg_user_id, reg_date, work_user_name
				, work_user_id, work_assign_date, work_complete_date, check_user_name, check_user_id
				, check_assign_date, task_data_source_type, task_check_request_type
			)
		VALUES
			(
				#{cityCode}, #{providerId}, #{taskType}, #{taskStatusType}, #{pubTransId}
				, #{pubTransType}, #{pubTransName}, #{taskComment}, #{bisAutoChangeData}, 'N'
				, #{regUserName}, #{regUserId}, now(), #{workUserName}
				, #{workUserId}, now(), now(), #{checkUserName}, #{checkUserId}
				, now(), #{taskDataSourceType}, #{taskCheckRequestType}
			)


	</insert>

	<insert id="insertTaskAssignInfo" parameterType="com.naver.pubtrans.itn.api.vo.task.TaskAssignInfoVo">
		INSERT INTO	tb_z_svc_task_assign_info
			(task_id, task_assign_type, assignee_user_id, assignee_user_name, reg_date, reg_user_id, reg_user_name)
		VALUES
			(#{taskId}, #{taskAssignType}, #{assigneeUserId}, #{assigneeUserName}, now(), #{regUserId}, #{regUserName})

	</insert>

	<insert id="insertTaskStatusInfo" parameterType="com.naver.pubtrans.itn.api.vo.task.TaskStatusInfoVo">
		INSERT INTO	tb_z_svc_task_status_info
			(task_id, task_status_type, reg_date, reg_user_id, reg_user_name)
		VALUES
			(#{taskId}, #{taskStatusType}, now(), #{regUserId}, #{regUserName})
	</insert>

	<update id="updateTaskInfo" parameterType="com.naver.pubtrans.itn.api.vo.task.input.TaskInputVo">
		UPDATE
			tb_z_svc_task
		SET
			city_code = #{cityCode}
			, provider_id = #{providerId}
			, task_status_type = #{taskStatusType}
			, pub_trans_name = #{pubTransName}
			, task_data_source_type = #{taskDataSourceType}
			, task_check_request_type = #{taskCheckRequestType}
			, task_comment = #{taskComment}
			, work_complete_date = now()
			, check_user_name = #{checkUserName}
			, check_user_id = #{checkUserId}
			, check_assign_date = now()
		WHERE
			task_id = #{taskId}
	</update>

</mapper>