<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naver.pubtrans.itn.api.repository.BusRouteRepository">


	<select id="getBusRouteListTotalCnt" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteSearchVo" resultType="int">
		SELECT
			count(*) as total_list_cnt
		FROM
			tb_routes route
			, tb_bus_routes_info sub
			, tb_city_code city
			, tb_bus_route_class rc
		WHERE
			<include refid="whereBusRouteList" />

	</select>

	<select id="selectBusRouteList" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteSearchVo" resultType="com.naver.pubtrans.itn.api.vo.bus.route.output.BusRouteListOutputVo">
		SELECT
		    route.route_id
		    , route.route_name
			, sub.bus_class
		    , rc.bus_class_name
			, sub.start_point_name
			, sub.end_point_name
		    , route.city_code
			, city.city_name
			, sub.bypass_yn
			, (select count(*) from tb_bus_route_bypass_mapping bypass where bypass.parent_route_id = route.route_id) as bypass_route_cnt
		FROM
			tb_routes route
			, tb_bus_routes_info sub
			, tb_city_code city
			, tb_bus_route_class rc
		WHERE

		<include refid="whereBusRouteList" />

		ORDER BY
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sortKey)">
					<choose>
						<when test="sortKey.equals('route_id')">
							route.route_id ${sortType}
						</when>
						<when test="sortKey.equals('route_name')">
							route.route_name ${sortType}
						</when>
						<when test="sortKey.equals('city_code')">
							route.city_code ${sortType}
						</when>
						<when test="sortKey.equals('bus_class')">
							sub.bus_class ${sortType}
						</when>
						<otherwise>
							route.route_id desc
						</otherwise>
					</choose>
				</when>
				<otherwise>
					route.route_id desc
				</otherwise>
			</choose>

		LIMIT
			#{startPageLimit}, #{endPageLimit}
	</select>


	<sql id="whereBusRouteList">
		route.route_id = sub.route_id
		and route.city_code = city.city_code
		and sub.bus_class = rc.bus_class_id

		<if test="cityCode != null and cityCode > 0">
			AND route.city_code = #{cityCode}
		</if>

		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(routeName)">
			AND route.route_name LIKE CONCAT(#{routeName}, '%')
		</if>

		<if test="routeId != null and routeId > 0">
			AND route.route_id = #{routeId}
		</if>

		<if test="busClass != null and busClass > 0">
			AND sub.bus_class = #{busClass}
		</if>
	</sql>


	<select id="getBusRoute" parameterType="int" resultType="com.naver.pubtrans.itn.api.vo.bus.route.BusRouteVo">
		SELECT
		    <include refid="selectCommonBusRoute" />
		FROM
			tb_routes route
			, tb_bus_routes_info sub
			, tb_calendar cal
		LEFT JOIN
			tb_bus_route_mapping mp ON mp.route_id = #{routeId}
		LEFT JOIN
			tb_bus_route_bypass_mapping bypass ON bypass.bypass_route_id = #{routeId}
		WHERE
			route.route_id = #{routeId}
			AND route.route_id = sub.route_id
			AND sub.service_id = cal.service_id
	</select>


	<select id="getBusRouteTask" parameterType="long" resultType="com.naver.pubtrans.itn.api.vo.bus.route.BusRouteTaskVo">
		SELECT
			<include refid="selectCommonBusRoute" />
		FROM
			tb_routes_task route
			, tb_bus_routes_info_task sub
			, tb_calendar cal
		LEFT JOIN
			tb_bus_route_mapping_task mp ON mp.task_id = #{taskId}
		LEFT JOIN
			tb_bus_route_bypass_mapping_task bypass ON bypass.task_id = #{taskId}
		WHERE
			route.task_id = #{taskId}
			AND route.task_id = sub.task_id
			AND sub.service_id = cal.service_id
	</select>

	<select id="selectBusRouteCompanyList" parameterType="int" resultType="com.naver.pubtrans.itn.api.vo.bus.route.output.BusRouteCompanyOutputVo">
		SELECT
		    <include refid="selectCommonBusRouteCompany" />
		FROM
			tb_bus_company_mapping mp
			, tb_bus_company company
			, tb_city_code city
		WHERE
			mp.route_id = #{routeId}
			AND mp.company_id = company.company_id
			AND company.city_code = city.city_code
	</select>

	<select id="getBusRouteCompanyTaskListCnt" parameterType="long" resultType="int">
		SELECT
			count(*) as total_list_cnt
		FROM
			tb_bus_company_mapping_task mp
			, tb_bus_company company
		WHERE
			mp.task_id = #{taskId}
			AND mp.company_id = company.company_id
	</select>


	<select id="selectBusRouteCompanyTaskList" parameterType="long" resultType="com.naver.pubtrans.itn.api.vo.bus.route.output.BusRouteCompanyOutputVo">
		SELECT
			<include refid="selectCommonBusRouteCompany" />
		FROM
			tb_bus_company_mapping_task mp
			, tb_bus_company company
			, tb_city_code city
		WHERE
			mp.task_id = #{taskId}
			AND mp.company_id = company.company_id
			AND company.city_code = city.city_code
	</select>

	<select id="selectBusRouteBypassList" parameterType="int" resultType="com.naver.pubtrans.itn.api.vo.bus.route.output.BusRouteBypassOutputVo">
		SELECT
			bypass.bypass_route_id
		    , bypass.parent_route_id
			, route.route_name
			, date_format(bypass.bypass_start_date, '%Y%m%d%H%m') as bypass_start_date_time
			, date_format(bypass.bypass_end_date, '%Y%m%d%H%m') as bypass_end_date_time
		FROM
		    tb_routes route
			, tb_bus_route_bypass_mapping bypass
		WHERE
			bypass.parent_route_id = #{parentRouteId}
			AND route.route_id = bypass.bypass_route_id
	</select>

	<sql id="selectCommonBusRouteCompany">
		mp.route_id
		, company.company_id
		, company.company_name
		, company.tel
		, company.city_code
		, city.city_name
	</sql>

	<sql id="selectCommonBusRoute">
		route.route_id
		, route.route_name
		, route.city_code
		, sub.bus_class
		, sub.bus_additional_name
		, sub.start_point_name
		, sub.end_point_name
		, sub.turning_point_sequence
		, sub.weekday_start_point_first_time
		, sub.weekday_start_point_last_time
		, sub.weekday_end_point_first_time
		, sub.weekday_end_point_last_time
		, sub.weekday_interval_min
		, sub.weekday_interval_max
		, sub.weekday_interval_count
		, sub.saturday_start_point_first_time
		, sub.saturday_start_point_last_time
		, sub.saturday_end_point_first_time
		, sub.saturday_end_point_last_time
		, sub.saturday_interval_min
		, sub.saturday_interval_max
		, sub.saturday_interval_count
		, sub.sunday_start_point_first_time
		, sub.sunday_start_point_last_time
		, sub.sunday_end_point_first_time
		, sub.sunday_end_point_last_time
		, sub.sunday_interval_min
		, sub.sunday_interval_max
		, sub.sunday_interval_count
		, sub.nonstep_bus_yn
		, sub.tel_reservation
		, sub.provider_id
		, sub.bypass_yn
		, mp.local_route_id
		, cal.monday_yn
		, cal.tuesday_yn
		, cal.wednesday_yn
		, cal.thursday_yn
		, cal.friday_yn
		, cal.saturday_yn
		, cal.sunday_yn
		, bypass.parent_route_id
		, date_format(bypass.bypass_start_date, '%Y%m%d%H%m') as bypass_start_date_time
		, date_format(bypass.bypass_end_date, '%Y%m%d%H%m') as bypass_end_date_time
	</sql>


	<select id="getCalendarServiceId" resultType="int" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
	<![CDATA[
		SELECT
			service_id
	    FROM
	    	tb_calendar
	    WHERE
	    	monday_yn = #{mondayYn} AND tuesday_yn = #{tuesdayYn} AND wednesday_yn = #{wednesdayYn} AND thursday_yn = #{thursdayYn}
	    	AND friday_yn = #{fridayYn} AND saturday_yn = #{saturdayYn} AND sunday_yn = #{sundayYn}
		    AND start_date <= now() AND end_date >= now()
	]]>
	</select>

	<select id="getBaseFareId" resultType="int" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		SELECT fare_id FROM tb_fare_rule WHERE city_code = #{cityCode} AND bus_class = #{busClass} AND base_yn = 'Y'
	</select>

	<insert id="insertBusRouteTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		INSERT INTO tb_routes_task
			(task_id, route_id, route_name, transport_id, city_code)
		VALUES
			(#{taskId}, #{routeId}, #{routeName}, 1, #{cityCode})
	</insert>

	<insert id="insertBusRouteSubTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		INSERT INTO tb_bus_routes_info_task
			(task_id, route_id, bus_class, bus_additional_name, start_point_name
			, end_point_name, turning_point_sequence, weekday_start_point_first_time, weekday_start_point_last_time, weekday_end_point_first_time
			, weekday_end_point_last_time, weekday_interval_min, weekday_interval_max, weekday_interval_count, saturday_start_point_first_time
			, saturday_start_point_last_time, saturday_end_point_first_time, saturday_end_point_last_time, saturday_interval_min, saturday_interval_max
			, saturday_interval_count, sunday_start_point_first_time, sunday_start_point_last_time, sunday_end_point_first_time, sunday_end_point_last_time
			, sunday_interval_min, sunday_interval_max, sunday_interval_count, nonstep_bus_yn, tel_reservation
			, provider_id, service_id, bypass_yn)
		VALUES
			(#{taskId}, #{routeId}, #{busClass}, #{busAdditionalName}, #{startPointName}
			, #{endPointName}, #{turningPointSequence}, #{weekdayStartPointFirstTime}, #{weekdayStartPointLastTime}, #{weekdayEndPointFirstTime}
			, #{weekdayEndPointLastTime}, #{weekdayIntervalMin}, #{weekdayIntervalMax}, #{weekdayIntervalCount}, #{saturdayStartPointFirstTime}
			, #{saturdayStartPointLastTime}, #{saturdayEndPointFirstTime}, #{saturdayEndPointLastTime}, #{saturdayIntervalMin}, #{saturdayIntervalMax}
			, #{saturdayIntervalCount}, #{sundayStartPointFirstTime}, #{sundayStartPointLastTime}, #{sundayEndPointFirstTime}, #{sundayEndPointLastTime}
			, #{sundayIntervalMin}, #{sundayIntervalMax}, #{sundayIntervalCount}, #{nonstepBusYn}, #{telReservation}
			, #{providerId},  #{serviceId}, #{bypassYn})
	</insert>

	<insert id="insertBusRouteCompanyTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteCompanyTaskInputVo">
		INSERT INTO tb_bus_company_mapping_task
			(task_id, route_id, company_id)
		VALUES
			(#{taskId}, #{routeId}, #{companyId})
	</insert>

	<insert id="insertBusRouteMappingTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		INSERT INTO tb_bus_route_mapping_task
			(task_id, route_id, local_route_id, provider_id)
		VALUES
			(#{taskId}, #{routeId}, #{localRouteId}, #{providerId})
	</insert>

	<insert id="insertBusRouteBypassTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		INSERT INTO tb_bus_route_bypass_mapping_task
			(task_id, bypass_route_id, parent_route_id, bypass_start_date, bypass_end_date)
		VALUES
			(#{taskId}, #{bypassRouteId}, #{parentRouteId}, #{bypassStartDateTime}, #{bypassEndDateTime})
	</insert>

	<insert id="insertBusRouteFareTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteTaskInputVo">
		INSERT INTO tb_route_fare_mapping_task
			(task_id, route_id, fare_id)
		VALUES
			(#{taskId}, #{routeId}, #{fareId})
	</insert>

	<insert id="insertBusRouteStopTask" parameterType="com.naver.pubtrans.itn.api.vo.bus.route.input.BusRouteStopTaskInputVo">
		INSERT INTO tb_route_stops_task
			(task_id, route_id, stop_sequence, stop_id, next_stop_id, up_down, sum_distance, graph_id)
		VALUES
			(#{taskId}, #{routeId}, #{stopSequence}, #{stopId}, #{nextStopId}, #{upDown}, #{cumulativeDistance}, #{graphId})
	</insert>

</mapper>